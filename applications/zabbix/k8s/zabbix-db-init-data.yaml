apiVersion: batch/v1
kind: Job
metadata:
  name: zabbix-db-init-data
  namespace: zabbix
  labels:
    app: zabbix-db-init-data
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: zabbix-db-init-data
        image: zabbix/zabbix-server-mysql:6.0-alpine-latest
        command:
          - /bin/bash
          - -c
          - |
            set -e
            echo "Waiting for MySQL to be ready..."
            while ! mysql -h zabbix-mysql -u zabbix -p${MYSQL_PASSWORD} -e "SELECT 1" > /dev/null 2>&1; do
              echo "Waiting for MySQL..."
              sleep 5
            done
            
            echo "Checking if users table is empty..."
            USER_COUNT=$(mysql -h zabbix-mysql -u zabbix -p${MYSQL_PASSWORD} -D zabbix -e "SELECT COUNT(*) FROM users;" -s -N)
            
            if [ "$USER_COUNT" = "0" ]; then
              echo "Users table is empty. Inserting initial data..."
              
              # Insert initial admin user (default Zabbix admin)
              mysql -h zabbix-mysql -u zabbix -p${MYSQL_PASSWORD} -D zabbix << 'EOF'
              INSERT INTO users (userid, username, name, surname, passwd, url, autologin, autologout, lang, refresh, type, theme, attempt_failed, attempt_ip, attempt_clock, rows_per_page) VALUES
              (1, 'Admin', 'Zabbix', 'Administrator', '5fce1b3e34b520afeffb37ce08c7cd66', '', 0, '15m', 'en_US', '30s', 3, 'default', 0, '', 0, 50);
              
              INSERT INTO usrgrp (usrgrpid, name, gui_access, users_status, debug_mode) VALUES
              (7, 'Zabbix administrators', 0, 0, 1),
              (8, 'Guests', 0, 0, 1),
              (9, 'Disabled', 2, 1, 1);
              
              INSERT INTO users_groups (id, usrgrpid, userid) VALUES
              (1, 7, 1);
              
              INSERT INTO rights (rightid, id, permission, groupid) VALUES
              (1, 7, 3, 1);
              
              INSERT INTO config (configid, refresh_unsupported, work_period, alert_usrgrpid, event_ack_enable, event_expire, event_show_max, default_theme, authentication_type, ldap_host, ldap_port, ldap_base_dn, ldap_bind_dn, ldap_bind_password, ldap_search_attribute, dropdown_first_entry, dropdown_first_remember, discovery_groupid, max_in_table, search_limit, severity_color_0, severity_color_1, severity_color_2, severity_color_3, severity_color_4, severity_color_5, severity_name_0, severity_name_1, severity_name_2, severity_name_3, severity_name_4, severity_name_5, ok_period, blink_period, problem_unack_color, problem_ack_color, ok_unack_color, ok_ack_color, problem_unack_style, problem_ack_style, ok_unack_style, ok_ack_style, snmptrap_logging, server_check_interval, hk_events_mode, hk_events_trigger, hk_events_internal, hk_events_discovery, hk_events_autoreg, hk_services_mode, hk_services, hk_audit_mode, hk_audit, hk_sessions_mode, hk_sessions, hk_history_mode, hk_history_global, hk_history, hk_trends_mode, hk_trends_global, hk_trends, default_inventory_mode, custom_color, communication_type, auth_validity_period, session_key) VALUES
              (1, 600, '1-7,00:00-24:00', 7, 1, '7d', 100, 'default', 0, '', 389, '', '', '', '', 1, 1, 4, 50, 1000, '97AAB3', 'FFC859', 'FFA059', 'E97659', 'E45959', 'B91C1C', 'Not classified', 'Information', 'Warning', 'Average', 'High', 'Disaster', '5m', '2s', 'CC0000', '00AA00', 'CC0000', '00AA00', 1, 1, 1, 1, 1, 10, 1, '365d', '1d', '1d', '1d', 1, '365d', 1, '365d', 1, '365d', 1, 0, '90d', 1, '365d', 1, '365d', -1, 0, 0, '1h', '');
              
              INSERT INTO hosts (hostid, host, name, status, description) VALUES
              (10001, 'Zabbix server', 'Zabbix server', 0, '');
              
              INSERT INTO hstgrp (groupid, name, type) VALUES
              (1, 'Templates', 1),
              (2, 'Linux servers', 0),
              (4, 'Zabbix servers', 0),
              (5, 'Discovered hosts', 0);
              
              INSERT INTO hosts_groups (hostgroupid, hostid, groupid) VALUES
              (1, 10001, 4);
              
              # Add more initial configuration as needed
              
              EOF
              
              echo "Initial data inserted successfully!"
            else
              echo "Users table already has data. Skipping initialization."
            fi
            
            echo "Database initialization complete!"
        env:
        - name: DB_SERVER_HOST
          value: "zabbix-mysql"
        - name: MYSQL_DATABASE
          value: "zabbix"
        - name: MYSQL_USER
          value: "zabbix"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zabbix-db-secret
              key: mysql-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zabbix-db-secret
              key: mysql-root-password

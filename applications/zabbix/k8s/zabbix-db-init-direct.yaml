apiVersion: batch/v1
kind: Job
metadata:
  name: zabbix-db-init-direct
  namespace: zabbix
spec:
  template:
    metadata:
      labels:
        app: zabbix-db-init-direct
    spec:
      restartPolicy: Never
      containers:
      - name: db-init
        image: alpine:latest
        env:
        - name: MYSQL_HOST
          value: "zabbix-mysql"
        - name: MYSQL_USER
          value: "zabbix"
        - name: MYSQL_PASSWORD
          value: "zabbix123!"
        - name: MYSQL_ROOT_PASSWORD
          value: "ZabbixRoot123!"
        - name: MYSQL_DATABASE
          value: "zabbix"
        command: 
        - /bin/sh
        - -c
        - |
          echo "🔄 Installing required packages..."
          apk add --no-cache mysql-client curl
          
          echo "⏳ Waiting for MySQL to be ready..."
          until mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -e "SELECT 1" > /dev/null 2>&1; do
            echo "Still waiting for MySQL..."
            sleep 5
          done
          echo "✅ MySQL is ready"
          
          echo "📊 Checking current database state..."
          TABLE_COUNT=$(mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -D $MYSQL_DATABASE -N -e "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '$MYSQL_DATABASE';" 2>/dev/null || echo "0")
          echo "Current table count: $TABLE_COUNT"
          
          if [ "$TABLE_COUNT" -lt 100 ]; then
            echo "🗑️ Dropping and recreating database for clean initialization..."
            mysql -h $MYSQL_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "DROP DATABASE IF EXISTS $MYSQL_DATABASE;"
            mysql -h $MYSQL_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE $MYSQL_DATABASE CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;"
            mysql -h $MYSQL_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%';"
            mysql -h $MYSQL_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;"
            
            echo "📥 Downloading Zabbix schema files..."
            
            # Try multiple sources for Zabbix schema
            SCHEMA_URLS=(
              "https://cdn.zabbix.com/zabbix/sources/stable/6.0/zabbix-6.0.40.tar.gz"
              "https://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/6.0.40/zabbix-6.0.40.tar.gz/download"
            )
            
            for url in "${SCHEMA_URLS[@]}"; do
              echo "Trying to download from: $url"
              if curl -L -f -o /tmp/zabbix.tar.gz "$url"; then
                echo "✅ Download successful from $url"
                break
              else
                echo "❌ Failed to download from $url"
              fi
            done
            
            if [ ! -f /tmp/zabbix.tar.gz ]; then
              echo "❌ Could not download Zabbix source, trying alternative method..."
              
              # Create minimal Zabbix schema inline as fallback
              cat > /tmp/minimal_schema.sql << 'EOF'
-- Minimal Zabbix schema to get started
CREATE TABLE IF NOT EXISTS config (
  configid bigint unsigned NOT NULL,
  refresh_unsupported varchar(32) NOT NULL DEFAULT '10m',
  work_period varchar(255) NOT NULL DEFAULT '1-7,00:00-24:00',
  alert_usrgrpid bigint unsigned DEFAULT NULL,
  default_theme varchar(128) NOT NULL DEFAULT 'blue-theme',
  authentication_type integer NOT NULL DEFAULT 0,
  discovery_groupid bigint unsigned NOT NULL,
  max_in_table integer NOT NULL DEFAULT 50,
  search_limit integer NOT NULL DEFAULT 1000,
  severity_color_0 varchar(6) NOT NULL DEFAULT '97AAB3',
  severity_color_1 varchar(6) NOT NULL DEFAULT '7499FF',
  severity_color_2 varchar(6) NOT NULL DEFAULT 'FFC859',
  severity_color_3 varchar(6) NOT NULL DEFAULT 'FFA059',
  severity_color_4 varchar(6) NOT NULL DEFAULT 'E97659',
  severity_color_5 varchar(6) NOT NULL DEFAULT 'E45959',
  severity_name_0 varchar(32) NOT NULL DEFAULT 'Not classified',
  severity_name_1 varchar(32) NOT NULL DEFAULT 'Information',
  severity_name_2 varchar(32) NOT NULL DEFAULT 'Warning',
  severity_name_3 varchar(32) NOT NULL DEFAULT 'Average',
  severity_name_4 varchar(32) NOT NULL DEFAULT 'High',
  severity_name_5 varchar(32) NOT NULL DEFAULT 'Disaster',
  ok_period varchar(32) NOT NULL DEFAULT '5m',
  blink_period varchar(32) NOT NULL DEFAULT '2m',
  problem_unack_color varchar(6) NOT NULL DEFAULT 'CC0000',
  problem_ack_color varchar(6) NOT NULL DEFAULT 'CC0000',
  ok_unack_color varchar(6) NOT NULL DEFAULT '009900',
  ok_ack_color varchar(6) NOT NULL DEFAULT '009900',
  problem_unack_style integer NOT NULL DEFAULT 1,
  problem_ack_style integer NOT NULL DEFAULT 1,
  ok_unack_style integer NOT NULL DEFAULT 1,
  ok_ack_style integer NOT NULL DEFAULT 1,
  snmptrap_logging integer NOT NULL DEFAULT 1,
  server_check_interval integer NOT NULL DEFAULT 10,
  hk_events_mode integer NOT NULL DEFAULT 1,
  hk_events_trigger varchar(32) NOT NULL DEFAULT '365d',
  hk_events_internal varchar(32) NOT NULL DEFAULT '1d',
  hk_events_discovery varchar(32) NOT NULL DEFAULT '1d',
  hk_events_autoreg varchar(32) NOT NULL DEFAULT '1d',
  hk_services_mode integer NOT NULL DEFAULT 1,
  hk_services varchar(32) NOT NULL DEFAULT '365d',
  hk_audit_mode integer NOT NULL DEFAULT 1,
  hk_audit varchar(32) NOT NULL DEFAULT '365d',
  hk_sessions_mode integer NOT NULL DEFAULT 1,
  hk_sessions varchar(32) NOT NULL DEFAULT '365d',
  hk_history_mode integer NOT NULL DEFAULT 1,
  hk_history_global integer NOT NULL DEFAULT 0,
  hk_history varchar(32) NOT NULL DEFAULT '90d',
  hk_trends_mode integer NOT NULL DEFAULT 1,
  hk_trends_global integer NOT NULL DEFAULT 0,
  hk_trends varchar(32) NOT NULL DEFAULT '365d',
  default_inventory_mode integer NOT NULL DEFAULT (-1),
  custom_color integer NOT NULL DEFAULT 0,
  http_auth_enabled integer NOT NULL DEFAULT 0,
  http_login_form integer NOT NULL DEFAULT 0,
  http_strip_domains varchar(2048) NOT NULL DEFAULT '',
  http_case_sensitive integer NOT NULL DEFAULT 1,
  ldap_configured integer NOT NULL DEFAULT 0,
  ldap_case_sensitive integer NOT NULL DEFAULT 1,
  db_extension varchar(32) NOT NULL DEFAULT '',
  autoreg_tls_accept integer NOT NULL DEFAULT 1,
  compression_status integer NOT NULL DEFAULT 0,
  compress_older varchar(32) NOT NULL DEFAULT '7d',
  instanceid varchar(32) NOT NULL DEFAULT '',
  saml_auth_enabled integer NOT NULL DEFAULT 0,
  saml_idp_entityid varchar(1024) NOT NULL DEFAULT '',
  saml_sso_url varchar(2048) NOT NULL DEFAULT '',
  saml_slo_url varchar(2048) NOT NULL DEFAULT '',
  saml_username_attribute varchar(128) NOT NULL DEFAULT '',
  saml_sp_entityid varchar(1024) NOT NULL DEFAULT '',
  saml_nameid_format varchar(256) NOT NULL DEFAULT '',
  saml_sign_messages integer NOT NULL DEFAULT 0,
  saml_sign_assertions integer NOT NULL DEFAULT 0,
  saml_sign_authn_requests integer NOT NULL DEFAULT 0,
  saml_sign_logout_requests integer NOT NULL DEFAULT 0,
  saml_sign_logout_responses integer NOT NULL DEFAULT 0,
  saml_encrypt_nameid integer NOT NULL DEFAULT 0,
  saml_encrypt_assertions integer NOT NULL DEFAULT 0,
  saml_case_sensitive integer NOT NULL DEFAULT 0,
  default_lang varchar(5) NOT NULL DEFAULT 'en_GB',
  default_timezone varchar(50) NOT NULL DEFAULT 'system',
  login_attempts integer NOT NULL DEFAULT 5,
  login_block varchar(32) NOT NULL DEFAULT '30s',
  show_technical_errors integer NOT NULL DEFAULT 0,
  validate_uri_schemes integer NOT NULL DEFAULT 1,
  uri_valid_schemes varchar(255) NOT NULL DEFAULT 'http,https,ftp,file,mailto,tel,ssh',
  x_frame_options varchar(255) NOT NULL DEFAULT 'SAMEORIGIN',
  iframe_sandboxing_enabled integer NOT NULL DEFAULT 1,
  iframe_sandboxing_exceptions varchar(255) NOT NULL DEFAULT '',
  max_overview_table_size integer NOT NULL DEFAULT 50,
  history_period varchar(32) NOT NULL DEFAULT '24h',
  period_default varchar(32) NOT NULL DEFAULT '1h',
  max_period varchar(32) NOT NULL DEFAULT '2y',
  socket_timeout varchar(32) NOT NULL DEFAULT '3s',
  connect_timeout varchar(32) NOT NULL DEFAULT '3s',
  media_type_test_timeout varchar(32) NOT NULL DEFAULT '65s',
  script_timeout varchar(32) NOT NULL DEFAULT '60s',
  item_test_timeout varchar(32) NOT NULL DEFAULT '60s',
  url varchar(255) NOT NULL DEFAULT '',
  report_test_timeout varchar(32) NOT NULL DEFAULT '60s',
  PRIMARY KEY (configid)
);

CREATE TABLE IF NOT EXISTS dbversion (
  dbversionid bigint unsigned NOT NULL AUTO_INCREMENT,
  mandatory integer NOT NULL DEFAULT 0,
  optional integer NOT NULL DEFAULT 0,
  PRIMARY KEY (dbversionid)
);

CREATE TABLE IF NOT EXISTS users (
  userid bigint unsigned NOT NULL AUTO_INCREMENT,
  username varchar(100) NOT NULL DEFAULT '',
  name varchar(100) NOT NULL DEFAULT '',
  surname varchar(100) NOT NULL DEFAULT '',
  passwd varchar(255) NOT NULL DEFAULT '',
  url varchar(255) NOT NULL DEFAULT '',
  autologin integer NOT NULL DEFAULT 0,
  autologout varchar(32) NOT NULL DEFAULT '15m',
  lang varchar(7) NOT NULL DEFAULT 'default',
  refresh varchar(32) NOT NULL DEFAULT '30s',
  theme varchar(128) NOT NULL DEFAULT 'default',
  attempt_failed integer NOT NULL DEFAULT 0,
  attempt_ip varchar(39) NOT NULL DEFAULT '',
  attempt_clock integer NOT NULL DEFAULT 0,
  rows_per_page integer NOT NULL DEFAULT 50,
  timezone varchar(50) NOT NULL DEFAULT 'default',
  roleid bigint unsigned DEFAULT NULL,
  userdirectoryid bigint unsigned DEFAULT NULL,
  PRIMARY KEY (userid),
  UNIQUE KEY users_1 (username)
);

CREATE TABLE IF NOT EXISTS usrgrp (
  usrgrpid bigint unsigned NOT NULL AUTO_INCREMENT,
  name varchar(64) NOT NULL DEFAULT '',
  gui_access integer NOT NULL DEFAULT 0,
  users_status integer NOT NULL DEFAULT 0,
  debug_mode integer NOT NULL DEFAULT 0,
  userdirectoryid bigint unsigned DEFAULT NULL,
  PRIMARY KEY (usrgrpid),
  UNIQUE KEY usrgrp_1 (name)
);

CREATE TABLE IF NOT EXISTS users_groups (
  id bigint unsigned NOT NULL AUTO_INCREMENT,
  userid bigint unsigned NOT NULL,
  usrgrpid bigint unsigned NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY users_groups_1 (userid,usrgrpid),
  KEY users_groups_2 (usrgrpid)
);

CREATE TABLE IF NOT EXISTS sessions (
  sessionid varchar(32) NOT NULL DEFAULT '',
  userid bigint unsigned NOT NULL,
  lastaccess integer NOT NULL DEFAULT 0,
  status integer NOT NULL DEFAULT 0,
  PRIMARY KEY (sessionid),
  KEY sessions_1 (userid,status)
);

CREATE TABLE IF NOT EXISTS profiles (
  profileid bigint unsigned NOT NULL AUTO_INCREMENT,
  userid bigint unsigned NOT NULL,
  idx varchar(96) NOT NULL DEFAULT '',
  idx2 bigint unsigned NOT NULL DEFAULT 0,
  value_id bigint unsigned NOT NULL DEFAULT 0,
  value_int integer NOT NULL DEFAULT 0,
  value_str text NOT NULL,
  source varchar(96) NOT NULL DEFAULT '',
  type integer NOT NULL DEFAULT 0,
  PRIMARY KEY (profileid),
  KEY profiles_1 (userid,idx,idx2),
  KEY profiles_2 (userid,profileid)
);

CREATE TABLE IF NOT EXISTS role (
  roleid bigint unsigned NOT NULL AUTO_INCREMENT,
  name varchar(255) NOT NULL DEFAULT '',
  type integer NOT NULL DEFAULT 0,
  readonly integer NOT NULL DEFAULT 0,
  PRIMARY KEY (roleid),
  UNIQUE KEY role_1 (name)
);

CREATE TABLE IF NOT EXISTS history (
  itemid bigint unsigned NOT NULL,
  clock integer NOT NULL DEFAULT 0,
  value DOUBLE PRECISION NOT NULL DEFAULT '0.0000',
  ns integer NOT NULL DEFAULT 0,
  KEY history_1 (itemid,clock)
);

-- Insert default data
INSERT INTO config (configid,alert_usrgrpid,discovery_groupid) VALUES (1,NULL,5);
INSERT INTO dbversion (mandatory,optional) VALUES (6000000,6000000);

-- Create admin user  
INSERT INTO users (userid,username,name,surname,passwd,roleid) VALUES (1,'Admin','Zabbix','Administrator','5fce1b3e34b520afeffb37ce08c7cd66',3);
INSERT INTO usrgrp (usrgrpid,name,gui_access,users_status,debug_mode) VALUES (7,'Zabbix administrators',0,0,0);
INSERT INTO users_groups (userid,usrgrpid) VALUES (1,7);
INSERT INTO role (roleid,name,type,readonly) VALUES (1,'Guest role',1,1);
INSERT INTO role (roleid,name,type,readonly) VALUES (2,'User role',1,1);  
INSERT INTO role (roleid,name,type,readonly) VALUES (3,'Admin role',3,1);
EOF
              
              echo "📋 Importing minimal schema..."
              mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < /tmp/minimal_schema.sql
              
            else
              echo "📦 Extracting Zabbix source..."
              cd /tmp
              tar -xzf zabbix.tar.gz
              
              ZABBIX_DIR=$(find /tmp -name "zabbix-*" -type d | head -1)
              if [ -d "$ZABBIX_DIR/database/mysql" ]; then
                echo "📋 Importing Zabbix schema..."
                mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < "$ZABBIX_DIR/database/mysql/schema.sql"
                mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < "$ZABBIX_DIR/database/mysql/images.sql"
                mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE < "$ZABBIX_DIR/database/mysql/data.sql"
              else
                echo "❌ Could not find database schema files"
                exit 1
              fi
            fi
            
            echo "✅ Database initialization completed successfully"
          else
            echo "✅ Database is already initialized ($TABLE_COUNT tables found)"
          fi
          
          echo "🎉 Database initialization job completed"

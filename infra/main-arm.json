{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "ARM template for AKS cluster with Zabbix infrastructure - Alternative to Bicep"
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Deployment location"
      }
    },
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Deployment environment name"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Principal ID of the deployment user for role assignments"
      }
    }
  },
  "variables": {
    "resourceToken": "[take(uniqueString(subscription().id, resourceGroup().id, parameters('environmentName')), 8)]",
    "resourceNames": {
      "vnet": "[concat('vnet-', variables('resourceToken'))]",
      "aksCluster": "[concat('aks-', variables('resourceToken'))]",
      "aksNodeRg": "[concat('rg-', parameters('environmentName'), '-aks-nodes-', variables('resourceToken'))]",
      "subnet": {
        "aks": "[concat('subnet-aks-', variables('resourceToken'))]",
        "appgw": "[concat('subnet-appgw-', variables('resourceToken'))]"
      },
      "identity": "[concat('id-', variables('resourceToken'))]",
      "logAnalytics": "[concat('law-', variables('resourceToken'))]",
      "containerRegistry": "[concat('acr', toLower(replace(replace(parameters('environmentName'), '-', ''), '_', '')), variables('resourceToken'))]",
      "appGateway": "[concat('appgw-', variables('resourceToken'))]",
      "publicIp": "[concat('pip-appgw-', variables('resourceToken'))]",
      "nsg": {
        "aks": "[concat('nsg-aks-', variables('resourceToken'))]",
        "appgw": "[concat('nsg-appgw-', variables('resourceToken'))]"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[variables('resourceNames').nsg.aks]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowAKSApiServer",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowSSH",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "[variables('resourceNames').nsg.appgw]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTPS",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAppGwManagement",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "65200-65535",
              "sourceAddressPrefix": "GatewayManager",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2024-05-01",
      "name": "[variables('resourceNames').vnet]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsg.aks)]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsg.appgw)]"
      ],
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.224.0.0/12"
          ]
        },
        "subnets": [
          {
            "name": "[variables('resourceNames').subnet.aks]",
            "properties": {
              "addressPrefix": "10.224.0.0/16",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsg.aks)]"
              }
            }
          },
          {
            "name": "[variables('resourceNames').subnet.appgw]",
            "properties": {
              "addressPrefix": "10.225.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('resourceNames').nsg.appgw)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('resourceNames').identity]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('resourceNames').logAnalytics]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[variables('resourceNames').containerRegistry]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2024-05-01",
      "name": "[variables('resourceNames').publicIp]",
      "location": "[parameters('location')]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[concat('zabbix-', variables('resourceToken'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2024-05-01",
      "name": "[variables('resourceNames').appGateway]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('resourceNames').vnet)]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIp)]"
      ],
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "properties": {
        "sku": {
          "name": "Standard_v2",
          "tier": "Standard_v2",
          "capacity": 1
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('resourceNames').vnet, variables('resourceNames').subnet.appgw)]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIp)]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          },
          {
            "name": "port_443",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "zabbixBackendPool",
            "properties": {}
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "zabbixHttpSettings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "requestTimeout": 20
            }
          }
        ],
        "httpListeners": [
          {
            "name": "zabbixListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('resourceNames').appGateway, 'appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('resourceNames').appGateway, 'port_80')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "zabbixRoutingRule",
            "properties": {
              "ruleType": "Basic",
              "priority": 100,
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('resourceNames').appGateway, 'zabbixListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('resourceNames').appGateway, 'zabbixBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('resourceNames').appGateway, 'zabbixHttpSettings')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2024-02-01",
      "name": "[variables('resourceNames').aksCluster]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('resourceNames').vnet)]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').identity)]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics)]"
      ],
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceNames').identity)]": {}
        }
      },
      "properties": {
        "dnsPrefix": "[concat(variables('resourceNames').aksCluster, '-dns')]",
        "nodeResourceGroup": "[variables('resourceNames').aksNodeRg]",
        "agentPoolProfiles": [
          {
            "name": "system",
            "count": 1,
            "vmSize": "Standard_B2s",
            "osType": "Linux",
            "mode": "System",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('resourceNames').vnet, variables('resourceNames').subnet.aks)]",
            "enableAutoScaling": true,
            "minCount": 1,
            "maxCount": 3
          },
          {
            "name": "workers",
            "count": 2,
            "vmSize": "Standard_B2s",
            "osType": "Linux",
            "mode": "User",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('resourceNames').vnet, variables('resourceNames').subnet.aks)]",
            "enableAutoScaling": true,
            "minCount": 1,
            "maxCount": 5
          }
        ],
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "addonProfiles": {
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('resourceNames').logAnalytics)]"
            }
          },
          "httpApplicationRouting": {
            "enabled": false
          }
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "serviceCidr": "10.0.0.0/16",
          "dnsServiceIP": "10.0.0.10"
        }
      }
    }
  ],
  "outputs": {
    "AKS_CLUSTER_NAME": {
      "type": "string",
      "value": "[variables('resourceNames').aksCluster]"
    },
    "AKS_CLUSTER_ID": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerService/managedClusters', variables('resourceNames').aksCluster)]"
    },
    "CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('resourceNames').containerRegistry)).loginServer]"
    },
    "CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[variables('resourceNames').containerRegistry]"
    },
    "APPLICATION_GATEWAY_PUBLIC_IP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIp)).ipAddress]"
    },
    "RESOURCE_GROUP_NAME": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}

apiVersion: batch/v1
kind: Job
metadata:
  name: zabbix-db-recreate
  namespace: zabbix
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: db-recreate
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zabbix-db-secret
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zabbix-db-secret
              key: mysql-password
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Waiting for MySQL to be ready..."
          until mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "SELECT 1" &>/dev/null; do
            echo "MySQL not ready, waiting..."
            sleep 5
          done
          echo "MySQL is ready. Recreating database..."
          
          # Drop and recreate the database
          mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "DROP DATABASE IF EXISTS zabbix;"
          mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE zabbix CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;"
          
          # Recreate user
          mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "DROP USER IF EXISTS 'zabbix'@'%';"
          mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "CREATE USER 'zabbix'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';"
          mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "GRANT ALL PRIVILEGES ON zabbix.* TO 'zabbix'@'%';"
          mysql -h zabbix-mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "FLUSH PRIVILEGES;"
          
          echo "Database recreated successfully. Zabbix server will initialize the schema on first start."
          echo "Database recreation completed successfully!"
  backoffLimit: 3
---
apiVersion: batch/v1
kind: Job  
metadata:
  name: zabbix-schema-init
  namespace: zabbix
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: schema-init
        image: zabbix/zabbix-server-mysql:6.0.40-ubuntu
        env:
        - name: DB_SERVER_HOST
          value: "zabbix-mysql"
        - name: DB_SERVER_PORT
          value: "3306"
        - name: MYSQL_DATABASE
          value: "zabbix"
        - name: MYSQL_USER
          value: "zabbix"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zabbix-db-secret
              key: mysql-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zabbix-db-secret
              key: mysql-root-password
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Waiting for database to be ready..."
          until mysql -h ${DB_SERVER_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} -e "SELECT 1" &>/dev/null; do
            echo "Database not ready, waiting..."
            sleep 5
          done
          
          echo "Database is ready. Checking if schema needs initialization..."
          
          # Check if tables exist
          TABLE_COUNT=$(mysql -h ${DB_SERVER_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} -e "SHOW TABLES;" | wc -l)
          
          if [ "$TABLE_COUNT" -eq 0 ]; then
            echo "Database is empty. Initializing schema..."
            
            # Initialize schema using the Zabbix server initialization
            mysql -h ${DB_SERVER_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} < /usr/share/zabbix-sql-scripts/mysql/server.sql
            
            echo "Schema initialized successfully!"
          else
            echo "Database already has tables, skipping schema initialization."
            echo "Existing tables: $TABLE_COUNT"
          fi
          
          # Create default admin user if not exists
          echo "Checking for admin user..."
          USER_COUNT=$(mysql -h ${DB_SERVER_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} -e "SELECT COUNT(*) FROM users WHERE username='Admin';" | tail -n 1)
          
          if [ "$USER_COUNT" -eq 0 ]; then
            echo "Creating default admin user..."
            cat << 'EOFUSER' | mysql -h ${DB_SERVER_HOST} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE}
INSERT INTO users (userid, username, name, surname, passwd, url, autologin, autologout, lang, refresh, type, theme, attempt_failed, attempt_ip, attempt_clock, rows_per_page, timezone, role_type) VALUES (1, 'Admin', 'Zabbix', 'Administrator', '5fce1b3e34b520afeffb37ce08c7cd66', '', 0, '15m', 'en_US', '30s', 3, 'default', 0, '', 0, 50, 'default', 3);
INSERT INTO usrgrp (usrgrpid, name, gui_access, users_status, debug_mode) VALUES (7, 'Zabbix administrators', 0, 0, 0);
INSERT INTO users_groups (id, usrgrpid, userid) VALUES (1, 7, 1);
EOFUSER
            echo "Admin user created successfully!"
          else
            echo "Admin user already exists."
          fi
          
          echo "Database initialization completed successfully!"
  backoffLimit: 3
